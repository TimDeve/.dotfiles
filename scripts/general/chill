#!/usr/bin/env zsh
set -Eeuo pipefail

LOFI_URL="https://www.youtube.com/watch?v=jfKfPfyJRdk"

declare -A CHILL_URLS
CHILL_URLS+=(
  ["DJ Set - Japanese Funk & Soul"]="https://www.youtube.com/watch?v=TEXZSzPpZqo"
  ["DJ Set - Salsa"]="https://www.youtube.com/watch?v=Zi_nhhzzWKE"
  ["DJ Set - Colombian Salsa"]="https://www.youtube.com/watch?v=E_b-Q0xiTmo"
  ["Erik Satie - Gnossiene"]="https://www.youtube.com/watch?v=Qr4azoVLqL0"
  ["Minecraft - Lush Caves"]="https://www.youtube.com/watch?v=ODLcDoM4qXs"
  ["Peaceful Piano"]="https://www.youtube.com/watch?v=hj83cwfOF3Y"
  ["Valheim - Meadows"]="https://www.youtube.com/watch?v=A3pu7gSHiKI"
  ["Valheim - Storm"]="https://www.youtube.com/watch?v=4cISK5Seb34"
  ["Zelda - Calm"]="https://www.youtube.com/watch?v=hhgpBiRHLGs"
  ["Zelda - Sky Islands"]="https://www.youtube.com/watch?v=cTS3LfDFMEI"
  ["Zelda - The Depth"]="https://www.youtube.com/watch?v=DJWKiTc9Z0E"
)

IN_HD=""
PICK=""
LOOP=""

while [[ $# -gt 0 ]]; do
  case $1 in
  -x | --verbose)
    set -x
    ;;
  --hd) # example flag
    IN_HD=1
    ;;
  --loop) # example flag
    LOOP=1
    ;;
  -p | --pick) # example named parameter
    PICK=1
    ;;
  -?*)
    echo "Unknown option: $1"
    ;;
  *)
    break
    ;;
  esac
  shift
done

errcho() {
  echo "$@" 1>&2
}

get_streamer() {
  if hash streamlink.exe 1>&2 2>/dev/null; then
    echo "streamlink.exe"
  elif hash streamlink 1>&2 2>/dev/null; then
    echo "streamlink"
  else
    errcho "Can't find streamlink nor streamlink.exe"
    errcho "Exiting..."
    exit 1
  fi
}

get_player() {
  local loop=""
  if [[ -n $LOOP ]]; then
    loop="--loop"
  fi
  if hash mpv.exe 1>&2 2>/dev/null; then
    echo "mpv.exe --vo=null --no-video $loop"
  elif hash mpv 1>&2 2>/dev/null; then
    echo "mpv --vo=null --no-video $loop"
  elif hash vlc.exe 1>&2 2>/dev/null || hash vlc 1>&2 2>/dev/null; then
    echo "vlc --intf dummy"
  fi
}

play_lofi() {
  local streamer player
  streamer="$(get_streamer)"
  if [[ -n "${IN_HD-}" ]]; then
    "$streamer" "$LOFI_URL" 1080p
  else
    player="$(get_player)"
    if [[ -n "$player" ]]; then
      "$streamer" "$LOFI_URL" 360p --player="$player" --quiet
    else
      "$streamer" "$LOFI_URL" 360p
    fi
  fi
}

print_urls() {
  for i in "${(@k)CHILL_URLS}"; do
    echo "$i"
  done
}

play_pick() {
  local pick
  pick=$(print_urls | sort -r | fzf)
  <<< ${CHILL_URLS[$pick]} xargs $(get_player)
}

just_chillin() {
  echo " . . . C H I L L I N . . ."
}

ART=$(cat <<GIRL

⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠖⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠃⠀⠀⠀⠀⢀⠏⠀⠀⠙⣦⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣠⠚⠛⠒⠲⢤⣄⣷⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠘⣷⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⣠⣤⣴⣾⡉⠉⠁⠉⠓⢤⡀⠀⠀⠈⠙⠻⣿⡟⢦⡀⠀⠀⠀⠀⠀⠀⠘⣷⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢀⡴⠋⠀⠀⠀⠀⠙⢶⡄⠀⠀⠀⠙⣆⠀⠀⠀⠀⠀⠙⠦⠑⠀⠀⠀⠀⠀⠀⠀⠹⣇⠀⠀⠀⠀⠀
⠀⠀⠀⢰⠏⠀⠀⠀⠀⠀⠀⠀⠀⠙⣦⠀⣀⣀⣨⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⠀⠀⠀⠀⠀
⠀⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣯⢥⠤⠴⣾⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⡼⠋⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠙⠎⠷⣿⢿⡅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⡼⠁⠀⠀⠀⠀⠀⠀⠀⠀⡼⠀⠀⠀⢀⣠⢴⣿⣶⣿⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢰⡇⠀⠀⠀⠀⠀⠀⠀⠰⣢⠀⠀⠀⢠⡏⢠⣿⠟⠉⠤⠌⠹⣧⠀⠀⠀⠀⠀⠀⣠⡖⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢸⣀⡀⠀⣰⢢⡀⠀⠀⠀⢹⣄⠀⠀⢸⠀⣿⡏⠀⠀⠀⠂⠀⣹⡇⠀⡀⠀⠀⢸⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠈⠙⠳⠤⠿⠟⣿⣶⣶⣾⣿⣿⣷⣤⡄⠁⠹⣿⣄⠠⣛⣴⣴⣿⠃⢠⠃⢀⡴⠋⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⣯⡿⣿⣿⣷⡄⠀⠈⠛⠶⠦⠶⠛⠁⢀⡖⢶⡾⠀⠐⠻⠒⠒⠦⣄⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣾⣿⣯⠳⢦⣄⣀⡀⣀⣠⣤⠶⢋⣾⠞⠀⠀⠀⠀⣀⣤⠴⢾⣧⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠰⣿⢿⣿⣿⣿⣿⣿⣶⣿⠇⠉⠁⠀⣀⣴⠟⠉⢠⠆⢀⣴⠞⣻⠃⠀⠀⠈⠳⣄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣴⣶⣾⣿⣿⣿⡟⣿⣿⣿⡏⣠⠖⠛⣲⠟⠁⠀⣠⢋⣴⠟⠁⣰⠃⠀⠀⠀⠀⠀⠈⠓⢦⡀
⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⢿⢷⠙⠿⡾⢿⡿⠞⠁⣰⠞⠁⠀⠀⡴⢁⣾⠿⠂⢰⠃⠀⠀⠀⠀⠀⠀⠀⢀⡾⠁
⠀⠀⠀⠀⠀⠀⠈⠻⢿⣿⣷⣄⣆⠀⠀⠀⢙⡆⢻⢃⠀⠀⠀⢸⢀⣿⠃⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⣰⠋⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠛⠛⣿⠛⠛⠛⠙⡄⠸⡏⠳⢄⡠⢆⣾⠃⠀⠀⠀⢿⠀⠀⠀⠀⠀⣠⠎⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⠀⠀⠀⡇⠀⡟⣦⡀⠀⣼⣯⣲⠿⣖⣦⣸⡀⠀⣀⠴⠋⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣝⣦⡀⡼⠁⠰⠃⠸⣷⢰⡟⠁⠀⠀⣀⣹⡿⠗⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠻⠦⠴⠇⠻⠿⠷⠒⠚⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀

       . . . C H I L L I N . . .

GIRL
)

ART_WIDTH=41
ART_HEIGHT=24

print_art() {
  if hash tput; then
    columns=$(tput cols)
    lines=$(tput lines)
    if [[ "$columns" -ge "$ART_WIDTH" ]] && [[ "$lines" -ge "$ART_HEIGHT" ]]; then
      padding=$(echo "($columns - $ART_WIDTH) / 2" | bc)

      clear
      printf "%s\n" "$ART" | awk "{print sprintf(\"% ${padding}s\", \"\") \$0}"
    else
      just_chillin
    fi
  else
    just_chillin
  fi
}

if [[ -n "$PICK" ]]; then
  just_chillin
  play_pick
else
  print_art
  play_lofi
fi

