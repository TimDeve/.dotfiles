ZSHRC="$(readlink ${ZDOTDIR-$HOME}/.zshrc)"
export DOTFILES="${ZSHRC/.dotfiles*/.dotfiles}"

source $DOTFILES/zsh/localpre.zsh

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export PATH="$PATH:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
export LS_COLORS=${LS_COLORS:-'di=34:ln=35:so=32:pi=33:ex=31:bd=36;01:cd=33;01:su=31;40;07:sg=36;40;07:tw=32;40;07:ow=33;40;07:'}

ZGEN_RESET_ON_CHANGE=(${HOME}/.dotfiles/zsh/zshrc.zgen)

# Load zgen
source "${HOME}/.zgen/zgen/zgen.zsh"

# Check if there's no init script
if ! zgen saved; then
    echo "Creating a zgen save"
    zgen load ianthehenry/sd

    if [[ -v NVM_LAZY_LOAD ]]; then
      zgen load lukechilds/zsh-nvm
    fi

    zgen load zimfw/git-info     "functions" ""
    zgen load zimfw/prompt-pwd   "functions" ""
    zgen load mafredri/zsh-async ""          "v1.8.6"
    zgen load TimDeve/sorin

    zgen load zsh-users/zsh-syntax-highlighting      "" "0.7.1"
    zgen load zsh-users/zsh-history-substring-search "" "v1.0.2"
    zgen load zsh-users/zsh-autosuggestions          "" "v0.7.0"

    # save all to init script
    zgen save
fi

autoload -Uz add-zle-hook-widget                        # Needed for history substring
autoload _sd && _comps[sd]=_sd                          # Register sd completion
autoload git-info git-action coalesce                   # Load git-info
autoload prompt-pwd                                     # Load prompt-pwd
source $HOME/.zgen/TimDeve/sorin-master/sorin.zsh-theme # Load prompt theme

bindkey -v # Start in vi insert mode
bindkey -M viins 'kj' vi-cmd-mode

typeset -gA keys
keys=(
  'Ctrl'      '\C-'
  'Backspace' "^?"
  'Escape'    '\e'
  'Up'        "$terminfo[kcuu1]"
  'Left'      "$terminfo[kcub1]"
  'Down'      "$terminfo[kcud1]"
  'Right'     "$terminfo[kcuf1]"
)

# Edit command in $EDITOR using Ctrl-E
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey -M viins "$keys[Ctrl]E" edit-command-line
bindkey -M vicmd "$keys[Ctrl]E" edit-command-line

# Emacs movement in Vi Insert mode
bindkey -M viins "$keys[Backspace]" backward-delete-char
bindkey -M viins "$keys[Ctrl]W"     backward-kill-word
bindkey -M viins "$keys[Ctrl]U"     backward-kill-line

for key in '\e[1;5D' '\e[5D' "${keys[Escape]}${keys[Left]}"
  bindkey -M viins "$key" emacs-backward-word
for key in '\e[1;5C' '\e[5C' "${keys[Escape]}${keys[Right]}"
  bindkey -M viins "$key" emacs-forward-word

# HISTORY
zmodload zsh/terminfo

bindkey -M vicmd "k" history-substring-search-up
bindkey -M vicmd "j" history-substring-search-down
for key in "$keys[Up]" '^[[A' "$keys[Ctrl]P"
  bindkey -M viins "$key" history-substring-search-up
for key in "$keys[Down]" '^[[B' "$keys[Ctrl]N"
  bindkey -M viins "$key" history-substring-search-down

setopt bang_hist
setopt extended_history
setopt share_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_ignore_all_dups
setopt hist_find_no_dups
setopt hist_ignore_space
setopt hist_save_no_dups
setopt hist_verify
setopt hist_beep

HISTFILE="${HISTFILE:-${ZDOTDIR:-$HOME}/.zsh_history}"
HISTSIZE="10000"
SAVEHIST="$HISTSIZE"
HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_FOUND='bg=magenta,fg=white,bold'
HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_NOT_FOUND='bg=red,fg=white,bold'
HISTORY_SUBSTRING_SEARCH_GLOBBING_FLAGS='i'

# COMPLETION
setopt   complete_in_word
setopt   always_to_end
setopt   path_dirs
setopt   auto_menu
setopt   auto_list
setopt   auto_param_slash
setopt   extended_glob
unsetopt menu_complete
unsetopt flow_control

zstyle ':completion:*:*:*:*:*'      menu select
zstyle ':completion:*:matches'      group 'yes'
zstyle ':completion:*:options'      description 'yes'
zstyle ':completion:*:options'      auto-description '%d'
zstyle ':completion:*:corrections'  format ' %F{green}-- %d (errors: %e) --%f'
zstyle ':completion:*:descriptions' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*:messages'     format ' %F{purple} -- %d --%f'
zstyle ':completion:*:warnings'     format ' %F{red}-- no matches found --%f'
zstyle ':completion:*'              format ' %F{yellow}-- %d --%f'
zstyle ':completion:*'              group-name ''
zstyle ':completion:*'              verbose yes
zstyle ':completion:*'              list-colors "${(s.:.)LS_COLORS}"

bindkey '^[[Z' reverse-menu-complete # Shift-tab goes back in completion menu

# AUTOSUGGEST
bindkey -M viins "$keys[Ctrl]K" autosuggest-accept

# Imports
source $DOTFILES/zsh/imports.zsh

